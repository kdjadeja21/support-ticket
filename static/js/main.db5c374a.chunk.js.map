{"version":3,"sources":["components/AppHeader.js","components/ShowData.js","components/AddData.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","AppBar","position","style","backgroundColor","Toolbar","className","onClick","this","props","toggleFunction","IconButton","edge","color","aria-label","showData","React","Component","ShowData","deleteData","id","e","DeleteData","editData","EditData","listitems","Data","map","row","TableRow","hover","key","TableCell","align","subject","user","assigned_user","Rating","name","value","priority","max","readOnly","FormControl","disabled","Select","status","MenuItem","Edit","Delete","TableContainer","Button","ClearStorage","variant","ClearStorageBool","Table","TableHead","TableBody","AddData","handleBlur","Handleblur","handleChange","HandleChange","submitHandler","SubmitHandler","onSubmit","Typography","onChange","TextField","multiline","label","onBlur","required","addData","InputLabel","labelId","App","state","clearStorage","unique_id","data","toggleData","setState","a","filteredItems","filter","item","length","localStorage","setItem","JSON","stringify","target","trim","itemData","alert","newItem","unshift","clearLocalStorage","clear","getItem","parse","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db5c374a.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport default class AppHeader extends React.Component {\n  render() {\n    return (\n      <div>\n        <AppBar position='static' style={{ backgroundColor: '#006A69' }}>\n          <Toolbar>\n            <span style={{ 'font-size': '21px' }}><i className=\"fa fa-ticket\"></i> Support Tickets</span>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <div onClick={this.props.toggleFunction}>\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                {!this.props.showData ? 'Show Tickets' : 'Create Tickets'}\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport { Button, FormControl, MenuItem, Select, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@material-ui/icons';\nimport Rating from '@material-ui/lab/Rating';\n\n\nexport default class ShowData extends React.Component {\n\n    deleteData = id => e => {\n        this.props.DeleteData(id);\n    }\n\n    editData = id => e => {\n        this.props.EditData(id);\n    }\n\n    render() {\n        const listitems = this.props.Data.map(row => {\n            return (\n                <TableRow hover key={row.id}>\n                    <TableCell align=\"center\">{row.id}</TableCell>\n                    <TableCell align=\"center\">{row.subject}</TableCell>\n                    <TableCell align=\"center\">{row.user}</TableCell>\n                    <TableCell align=\"center\">{row.assigned_user}</TableCell>\n                    <TableCell align=\"center\">\n                        <Rating\n                            name=\"priority_value\"\n                            value={row.priority}\n                            max={3}\n                            readOnly />\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        <FormControl style={{ 'min-width': '100px' }} disabled>\n                            <Select\n                                name=\"statusShow\"\n                                value={row.status}\n                            >\n                                <MenuItem value={1}>Open</MenuItem>\n                                <MenuItem value={2}>In Progress</MenuItem>\n                                <MenuItem value={3}>Close</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        <span onClick={this.editData(row.id)}>\n                            <IconButton>\n                                <EditIcon />\n                            </IconButton>\n                        </span>\n                        <span onClick={this.deleteData(row.id)}>\n                            <IconButton color='secondary'>\n                                <DeleteIcon />\n                            </IconButton>\n                        </span>\n                    </TableCell>\n                </TableRow>\n            )\n        })\n\n        return (\n            <TableContainer style={{ 'border-radius': '10px' }}>\n                <Button\n                    onClick={this.props.ClearStorage}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={this.props.ClearStorageBool}>\n                    Clear All\n                </Button>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Id</TableCell>\n                            <TableCell align=\"center\">Subject</TableCell>\n                            <TableCell align=\"center\">User</TableCell>\n                            <TableCell align=\"center\">Assigned User</TableCell>\n                            <TableCell align=\"center\">Priority</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>\n                            <TableCell align=\"center\">Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {listitems}\n                    </TableBody>\n                </Table>\n            </TableContainer >\n        )\n\n    }\n}","import React from 'react';\nimport { TextField, Typography, FormControl, MenuItem, InputLabel, Select } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\n\nexport default class AddData extends React.Component {\n    handleBlur = e => {\n        this.props.Handleblur(e);\n    }\n    handleChange = e => {\n        this.props.HandleChange(e);\n    }\n\n    submitHandler = e => {\n        this.props.SubmitHandler(e);\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this.submitHandler(e)}>\n                    <center>\n                        <br /><br />\n                        <Typography>Priority</Typography>\n                        <Rating\n                            name=\"priority\"\n                            value={this.props.Data.priority}\n                            max={3}\n                            onChange={this.handleChange}\n                        /><br /><br />\n                        <TextField\n                            multiline\n                            label='Subject'\n                            value={this.props.Data.subject}\n                            name='subject'\n                            onChange={this.handleChange}\n                            onBlur={this.handleBlur}\n                            required\n                        /> <br /><br />\n                        <FormControl style={{ 'min-width': '200px' }} disabled={this.props.Data.addData}>\n                            <InputLabel>Status</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                name=\"status\"\n                                onChange={this.handleChange}\n                                value={this.props.Data.status}\n                            >\n                                <MenuItem value={1}>Open</MenuItem>\n                                <MenuItem value={2}>In Progress</MenuItem>\n                                <MenuItem value={3}>Close</MenuItem>\n                            </Select>\n                        </FormControl><br /><br />\n                        <TextField\n                            label='User'\n                            value={this.props.Data.user}\n                            name='user'\n                            onBlur={this.handleBlur}\n                            onChange={this.handleChange}\n                            required\n                        /><br /><br />\n                        <TextField\n                            label='Assigned User'\n                            value={this.props.Data.assigned_user}\n                            name='assigned_user'\n                            onBlur={this.handleBlur}\n                            onChange={this.handleChange}\n                            required\n                        /><br /><br />\n                        <button className='btn'>\n                            {this.props.Data.addData ? 'Add' : 'Update'}\n                        </button><br /><br />\n                    </center>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport AppHeader from './components/AppHeader';\nimport ShowData from './components/ShowData';\nimport AddData from './components/AddData';\n\nclass App extends React.Component {\n\n  state = {\n    addData: true,\n    editData: false,\n    showData: false,\n    clearStorage: true,\n    unique_id: 0,\n    id: 0,\n    subject: '',\n    priority: '3',\n    status: 1,\n    user: '',\n    assigned_user: '',\n    data: []\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: localStorage.getItem('data') ? JSON.parse(localStorage.getItem('data')) : [],\n      id: localStorage.getItem('id') ? parseInt(localStorage.getItem('id')) : 0,\n      clearStorage: (localStorage.getItem('data') && JSON.parse(localStorage.getItem('data')).length === 0) || !localStorage.getItem('data') ? true : false\n    })\n  }\n\n  toggleData = () => {\n    this.setState({\n      showData: !this.state.showData,\n      addData: !this.state.addData\n    })\n  }\n  editData = async (id) => {\n    const filteredItems = this.state.data.filter(item =>\n      item.id === id);\n    await this.setState({\n      addData: false,\n      editData: true,\n      showData: false,\n      id: id,\n      unique_id: this.state.id,\n      subject: filteredItems[0].subject,\n      priority: filteredItems[0].priority,\n      status: filteredItems[0].status,\n      user: filteredItems[0].user,\n      assigned_user: filteredItems[0].assigned_user\n    })\n  }\n  deleteData = id => {\n    const filteredItems = this.state.data.filter(item =>\n      item.id !== id);\n\n    this.setState({\n      data: filteredItems,\n      clearStorage: filteredItems.length === 0\n    })\n    localStorage.setItem('data', JSON.stringify(filteredItems));\n  }\n  handleBlur = (e) => {\n    this.setState({ [e.target.name]: e.target.value.trim() });\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  submitHandler = async (e) => {\n    // e.preventDefault();\n    let itemData = [];\n    if (!this.state.subject && !this.state.priority && !this.state.status && !this.state.user && !this.state.assigned_user) {\n      alert('Please Fill all the fields.');\n    }\n    else {\n      if (this.state.addData) {\n        const newItem = {\n          id: this.state.id + 1,\n          subject: this.state.subject,\n          priority: this.state.priority,\n          status: this.state.status,\n          user: this.state.user,\n          assigned_user: this.state.assigned_user\n        }\n\n        itemData = this.state.data ? this.state.data : [];\n        itemData.unshift(newItem);\n\n      }\n      else if (this.state.editData) {\n        itemData = this.state.data;\n        itemData.map(item => {\n          if (item.id === this.state.id) {\n            return (\n              item.subject = this.state.subject,\n              item.priority = this.state.priority,\n              item.status = this.state.status,\n              item.user = this.state.user,\n              item.assigned_user = this.state.assigned_user\n            )\n          }\n        })\n      }\n      await this.setState({\n        data: itemData,\n        subject: '',\n        priority: '3',\n        status: '1',\n        user: '',\n        assigned_user: '',\n        id: this.state.editData ? this.state.unique_id : this.state.id + 1,\n        addData: false,\n        editData: false,\n        showData: true,\n        clearStorage: false\n      });\n      localStorage.setItem('data', JSON.stringify(itemData));\n      localStorage.setItem('id', this.state.editData ? this.state.unique_id : this.state.id);\n    }\n  }\n  clearLocalStorage = () => {\n    localStorage.clear();\n    this.setState({\n      id: 0,\n      data: [],\n      clearStorage: true\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AppHeader\n          toggleFunction={this.toggleData}\n          showData={this.state.showData}\n        />\n        <center>\n          <div\n            className={!this.state.showData ? 'addDataForm' : 'showData'}\n            style={{ 'box-shadow': '2px 5px 13px 0px #ccc', 'border': '1px solid #fff', 'border-radius': '10px' }}>\n            {\n              !this.state.showData ?\n                <AddData\n                  Data={this.state}\n                  Handleblur={this.handleBlur}\n                  HandleChange={this.handleChange}\n                  SubmitHandler={this.submitHandler}\n                />\n                :\n                <ShowData\n                  ClearStorage={this.clearLocalStorage}\n                  Data={this.state.data}\n                  ClearStorageBool={this.state.clearStorage}\n                  EditData={this.editData}\n                  DeleteData={this.deleteData}\n                />\n\n            }\n\n          </div>\n        </center>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}